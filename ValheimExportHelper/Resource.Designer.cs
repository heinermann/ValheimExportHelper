//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ValheimExportHelper {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ValheimExportHelper.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] Blank {
            get {
                object obj = ResourceManager.GetObject("Blank", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #if UNITY_EDITOR
        ///using UnityEngine;
        ///using UnityEngine.SceneManagement;
        ///using UnityEditor;
        ///using UnityEditor.SceneManagement;
        ///using System.IO;
        ///using System;
        ///
        ///[InitializeOnLoad]
        ///public class Editor : MonoBehaviour
        ///{
        ///  static void OnSceneLoad(string path)
        ///  {
        ///    Debug.Log($&quot;Opening scene {path}&quot;);
        ///    switch (Path.GetFileName(path))
        ///    {
        ///      case &quot;main.unity&quot;:
        ///        WorldGenerator.Initialize(World.GetDevWorld());
        ///        break;
        ///      case &quot;start.unity&quot;:
        ///      default:
        ///        WorldGe [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Editor {
            get {
                return ResourceManager.GetString("Editor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] manifest {
            get {
                object obj = ResourceManager.GetObject("manifest", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] PostProcessing {
            get {
                object obj = ResourceManager.GetObject("PostProcessing", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.IO;
        ///using UnityEngine;
        ///using System.IO.Compression;
        ///using UnityEditor;
        ///using UnityEditor.SceneManagement;
        ///[InitializeOnLoad]
        ///public class RestoreShadersOnSceneLoad : MonoBehaviour
        ///{
        ///    private static void RestoreOriginalShaders() {
        ///        Directory.Delete(&quot;Assets/Shader&quot;, recursive: true);
        ///        var zip = ZipStorer.Open(&quot;Assets/Shader_Original.zip&quot;, FileAccess.Read);
        ///        List&lt;ZipStorer.ZipFileEntry&gt; dir = zip.ReadCentralDir();
        ///        forea [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ScuffedShaders {
            get {
                return ResourceManager.GetString("ScuffedShaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] Shaders {
            get {
                object obj = ResourceManager.GetObject("Shaders", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // ZipStorer, by Jaime Olivares
        /// // Website: zipstorer.codeplex.com
        /// // Version: 2.35 (March 14, 2010)
        ///
        ///using System.Collections.Generic;
        ///using System.Text;
        ///
        ///namespace System.IO.Compression
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Unique class for compression/decompression file. Represents a Zip file.
        ///    /// &lt;/summary&gt;
        ///    public class ZipStorer : IDisposable
        ///    {
        ///        /// &lt;summary&gt;
        ///        /// Compression method enumeration
        ///        /// &lt;/summary&gt;
        ///        public enum Compression : ushort { 
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ZipStorer {
            get {
                return ResourceManager.GetString("ZipStorer", resourceCulture);
            }
        }
    }
}
